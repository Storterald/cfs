{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 5,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "common",
      "hidden": true,
      "binaryDir": "${sourceDir}/build/${presetName}",
      "installDir": "${sourceDir}/build/${presetName}",
      "cacheVariables": {
        "PRESETS_PROFILE": "ON",
        "CMAKE_C_STANDARD": "99",
        "CMAKE_C_STANDARD_REQUIRED": "ON",
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      },
      "warnings": {
        "unusedCli": false
      }
    },
    {
      "name": "gcc",
      "hidden": true,
      "inherits": "common",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_C_FLAGS": "-m64 -Wall -Wextra -Wpedantic -Werror",
        "CMAKE_CXX_FLAGS": "-m64"
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "MinGW"
        },
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "intelliSenseMode": "linux-gcc-x64"
        }
      }
    },
    {
      "name": "msvc",
      "hidden": true,
      "inherits": "common",
      "generator": "Visual Studio 17 2022",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_CXX_COMPILER": "cl"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "Visual Studio"
        },
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "intelliSenseMode": "windows-msvc-x64"
        }
      }
    },
    {
      "name": "clang-sanitize",
      "hidden": true,
      "inherits": "common",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_C_FLAGS": "-m64 -Wall -Wextra -Wpedantic -Werror -gdwarf-4 -fno-omit-frame-pointer -fsanitize=address",
        "CMAKE_CXX_FLAGS": "-m64 -gdwarf-4 -fno-omit-frame-pointer -fsanitize=address",
        "CMAKE_EXE_LINKER_FLAGS": "-fno-omit-frame-pointer -fsanitize=address"
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "MinGW Clang"
        },
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "intelliSenseMode": "linux-gcc-x64"
        }
      }
    },
    {
      "name": "gcc-release",
      "displayName": "GCC Release",
      "inherits": "gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "gcc-debug",
      "displayName": "GCC Debug",
      "inherits": "gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "msvc-release",
      "displayName": "MSVC Release",
      "inherits": "msvc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "msvc-debug",
      "displayName": "MSVC Debug",
      "inherits": "msvc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "clang-debug-sanitize",
      "displayName": "Clang Sanitize",
      "inherits": "clang-sanitize",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "gcc-release-build",
      "displayName": "GCC Release",
      "configuration": "Release",
      "configurePreset": "gcc-release"
    },
    {
      "name": "gcc-debug-build",
      "displayName": "GCC Debug",
      "configuration": "Debug",
      "configurePreset": "gcc-debug"
    },
    {
      "name": "msvc-release-build",
      "displayName": "MSVC Release",
      "configuration": "Release",
      "configurePreset": "msvc-release"
    },
    {
      "name": "msvc-debug-build",
      "displayName": "MSVC Debug",
      "configuration": "Debug",
      "configurePreset": "msvc-debug"
    },
    {
      "name": "clang-sanitize-build",
      "displayName": "Clang Sanitize",
      "configuration": "Debug",
      "configurePreset": "clang-debug-sanitize"
    }
  ]
}